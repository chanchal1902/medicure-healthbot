[
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "BedrockAll",
        "Effect": "Allow",
        "Action": [
          "bedrock:*"
        ],
        "Resource": "*"
      },
      {
        "Sid": "DescribeKey",
        "Effect": "Allow",
        "Action": [
          "kms:DescribeKey"
        ],
        "Resource": "arn:*:kms:*:::*"
      },
      {
        "Sid": "APIsWithAllResourceAccess",
        "Effect": "Allow",
        "Action": [
          "iam:ListRoles",
          "ec2:DescribeVpcs",
          "ec2:DescribeSubnets",
          "ec2:DescribeSecurityGroups"
        ],
        "Resource": "*"
      },
      {
        "Sid": "MarketplaceModelEndpointMutatingAPIs",
        "Effect": "Allow",
        "Action": [
          "sagemaker:CreateEndpoint",
          "sagemaker:CreateEndpointConfig",
          "sagemaker:CreateModel",
          "sagemaker:DeleteEndpoint",
          "sagemaker:UpdateEndpoint"
        ],
        "Resource": [
          "arn:aws:sagemaker:*:*:endpoint/*",
          "arn:aws:sagemaker:*:*:endpoint-config/*",
          "arn:aws:sagemaker:*:*:model/*"
        ],
        "Condition": {
          "StringEquals": {
            "aws:CalledViaLast": "bedrock.amazonaws.com",
            "aws:ResourceTag/sagemaker-sdk:bedrock": "compatible"
          }
        }
      },
      {
        "Sid": "MarketplaceModelEndpointAddTagsOperations",
        "Effect": "Allow",
        "Action": [
          "sagemaker:AddTags"
        ],
        "Resource": [
          "arn:aws:sagemaker:*:*:endpoint/*",
          "arn:aws:sagemaker:*:*:endpoint-config/*",
          "arn:aws:sagemaker:*:*:model/*"
        ],
        "Condition": {
          "ForAllValues:StringEquals": {
            "aws:TagKeys": [
              "sagemaker-sdk:bedrock",
              "bedrock:marketplace-registration-status",
              "sagemaker-studio:hub-content-arn"
            ]
          },
          "StringLike": {
            "aws:RequestTag/sagemaker-sdk:bedrock": "compatible",
            "aws:RequestTag/bedrock:marketplace-registration-status": "registered",
            "aws:RequestTag/sagemaker-studio:hub-content-arn": "arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/*"
          }
        }
      },
      {
        "Sid": "MarketplaceModelEndpointDeleteTagsOperations",
        "Effect": "Allow",
        "Action": [
          "sagemaker:DeleteTags"
        ],
        "Resource": [
          "arn:aws:sagemaker:*:*:endpoint/*",
          "arn:aws:sagemaker:*:*:endpoint-config/*",
          "arn:aws:sagemaker:*:*:model/*"
        ],
        "Condition": {
          "ForAllValues:StringEquals": {
            "aws:TagKeys": [
              "sagemaker-sdk:bedrock",
              "bedrock:marketplace-registration-status",
              "sagemaker-studio:hub-content-arn"
            ]
          },
          "StringLike": {
            "aws:ResourceTag/sagemaker-sdk:bedrock": "compatible",
            "aws:ResourceTag/bedrock:marketplace-registration-status": "registered",
            "aws:ResourceTag/sagemaker-studio:hub-content-arn": "arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/*"
          }
        }
      },
      {
        "Sid": "MarketplaceModelEndpointNonMutatingAPIs",
        "Effect": "Allow",
        "Action": [
          "sagemaker:DescribeEndpoint",
          "sagemaker:DescribeEndpointConfig",
          "sagemaker:DescribeModel",
          "sagemaker:DescribeInferenceComponent",
          "sagemaker:ListEndpoints",
          "sagemaker:ListTags"
        ],
        "Resource": [
          "arn:aws:sagemaker:*:*:endpoint/*",
          "arn:aws:sagemaker:*:*:endpoint-config/*",
          "arn:aws:sagemaker:*:*:model/*"
        ],
        "Condition": {
          "StringEquals": {
            "aws:CalledViaLast": "bedrock.amazonaws.com"
          }
        }
      },
      {
        "Sid": "MarketplaceModelEndpointInvokingOperations",
        "Effect": "Allow",
        "Action": [
          "sagemaker:InvokeEndpoint",
          "sagemaker:InvokeEndpointWithResponseStream"
        ],
        "Resource": [
          "arn:aws:sagemaker:*:*:endpoint/*"
        ],
        "Condition": {
          "StringEquals": {
            "aws:CalledViaLast": "bedrock.amazonaws.com",
            "aws:ResourceTag/sagemaker-sdk:bedrock": "compatible"
          }
        }
      },
      {
        "Sid": "DiscoveringMarketplaceModel",
        "Effect": "Allow",
        "Action": [
          "sagemaker:DescribeHubContent"
        ],
        "Resource": [
          "arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/*",
          "arn:aws:sagemaker:*:aws:hub/SageMakerPublicHub"
        ]
      },
      {
        "Sid": "AllowMarketplaceModelsListing",
        "Effect": "Allow",
        "Action": [
          "sagemaker:ListHubContents"
        ],
        "Resource": "arn:aws:sagemaker:*:aws:hub/SageMakerPublicHub"
      },
      {
        "Sid": "PassRoleToSageMaker",
        "Effect": "Allow",
        "Action": [
          "iam:PassRole"
        ],
        "Resource": [
          "arn:aws:iam::*:role/*SageMaker*ForBedrock*"
        ],
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": [
              "sagemaker.amazonaws.com",
              "bedrock.amazonaws.com"
            ]
          }
        }
      },
      {
        "Sid": "PassRoleToBedrock",
        "Effect": "Allow",
        "Action": [
          "iam:PassRole"
        ],
        "Resource": "arn:aws:iam::*:role/*AmazonBedrock*",
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": [
              "bedrock.amazonaws.com"
            ]
          }
        }
      },
      {
        "Sid": "MarketplaceOperationsFromBedrockFor3pModels",
        "Effect": "Allow",
        "Action": [
          "aws-marketplace:Subscribe",
          "aws-marketplace:ViewSubscriptions",
          "aws-marketplace:Unsubscribe"
        ],
        "Resource": "*",
        "Condition": {
          "StringEquals": {
            "aws:CalledViaLast": "bedrock.amazonaws.com"
          }
        }
      }
    ]
  },
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Action": [
          "dynamodb:*",
          "dax:*",
          "application-autoscaling:DeleteScalingPolicy",
          "application-autoscaling:DeregisterScalableTarget",
          "application-autoscaling:DescribeScalableTargets",
          "application-autoscaling:DescribeScalingActivities",
          "application-autoscaling:DescribeScalingPolicies",
          "application-autoscaling:PutScalingPolicy",
          "application-autoscaling:RegisterScalableTarget",
          "cloudwatch:DeleteAlarms",
          "cloudwatch:DescribeAlarmHistory",
          "cloudwatch:DescribeAlarms",
          "cloudwatch:DescribeAlarmsForMetric",
          "cloudwatch:GetMetricStatistics",
          "cloudwatch:ListMetrics",
          "cloudwatch:PutMetricAlarm",
          "cloudwatch:GetMetricData",
          "datapipeline:ActivatePipeline",
          "datapipeline:CreatePipeline",
          "datapipeline:DeletePipeline",
          "datapipeline:DescribeObjects",
          "datapipeline:DescribePipelines",
          "datapipeline:GetPipelineDefinition",
          "datapipeline:ListPipelines",
          "datapipeline:PutPipelineDefinition",
          "datapipeline:QueryObjects",
          "ec2:DescribeVpcs",
          "ec2:DescribeSubnets",
          "ec2:DescribeSecurityGroups",
          "iam:GetRole",
          "iam:ListRoles",
          "kms:DescribeKey",
          "kms:ListAliases",
          "sns:CreateTopic",
          "sns:DeleteTopic",
          "sns:ListSubscriptions",
          "sns:ListSubscriptionsByTopic",
          "sns:ListTopics",
          "sns:Subscribe",
          "sns:Unsubscribe",
          "sns:SetTopicAttributes",
          "lambda:CreateFunction",
          "lambda:ListFunctions",
          "lambda:ListEventSourceMappings",
          "lambda:CreateEventSourceMapping",
          "lambda:DeleteEventSourceMapping",
          "lambda:GetFunctionConfiguration",
          "lambda:DeleteFunction",
          "resource-groups:ListGroups",
          "resource-groups:ListGroupResources",
          "resource-groups:GetGroup",
          "resource-groups:GetGroupQuery",
          "resource-groups:DeleteGroup",
          "resource-groups:CreateGroup",
          "tag:GetResources",
          "kinesis:ListStreams",
          "kinesis:DescribeStream",
          "kinesis:DescribeStreamSummary"
        ],
        "Effect": "Allow",
        "Resource": "*"
      },
      {
        "Action": "cloudwatch:GetInsightRuleReport",
        "Effect": "Allow",
        "Resource": "arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*"
      },
      {
        "Action": [
          "iam:PassRole"
        ],
        "Effect": "Allow",
        "Resource": "*",
        "Condition": {
          "StringLike": {
            "iam:PassedToService": [
              "application-autoscaling.amazonaws.com",
              "application-autoscaling.amazonaws.com.cn",
              "dax.amazonaws.com"
            ]
          }
        }
      },
      {
        "Effect": "Allow",
        "Action": [
          "iam:CreateServiceLinkedRole"
        ],
        "Resource": "*",
        "Condition": {
          "StringEquals": {
            "iam:AWSServiceName": [
              "replication.dynamodb.amazonaws.com",
              "dax.amazonaws.com",
              "dynamodb.application-autoscaling.amazonaws.com",
              "contributorinsights.dynamodb.amazonaws.com",
              "kinesisreplication.dynamodb.amazonaws.com"
            ]
          }
        }
      }
    ]
  },
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "s3:*",
          "s3-object-lambda:*"
        ],
        "Resource": "*"
      }
    ]
  },
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "textract:*"
        ],
        "Resource": "*"
      }
    ]
  },
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "cloudformation:DescribeStacks",
          "cloudformation:ListStackResources",
          "cloudwatch:ListMetrics",
          "cloudwatch:GetMetricData",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeSubnets",
          "ec2:DescribeVpcs",
          "kms:ListAliases",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "iam:GetRole",
          "iam:GetRolePolicy",
          "iam:ListAttachedRolePolicies",
          "iam:ListRolePolicies",
          "iam:ListRoles",
          "lambda:*",
          "logs:DescribeLogGroups",
          "states:DescribeStateMachine",
          "states:ListStateMachines",
          "tag:GetResources",
          "xray:GetTraceSummaries",
          "xray:BatchGetTraces"
        ],
        "Resource": "*"
      },
      {
        "Effect": "Allow",
        "Action": "iam:PassRole",
        "Resource": "*",
        "Condition": {
          "StringEquals": {
            "iam:PassedToService": "lambda.amazonaws.com"
          }
        }
      },
      {
        "Effect": "Allow",
        "Action": [
          "logs:DescribeLogStreams",
          "logs:GetLogEvents",
          "logs:FilterLogEvents",
          "logs:StartLiveTail",
          "logs:StopLiveTail"
        ],
        "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
      }
    ]
  },
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": "logs:CreateLogGroup",
        "Resource": "arn:aws:logs:us-east-1:254305339601:*"
      },
      {
        "Effect": "Allow",
        "Action": [
          "logs:CreateLogStream",
          "logs:PutLogEvents"
        ],
        "Resource": [
          "arn:aws:logs:us-east-1:254305339601:log-group:/aws/lambda/extractor_backend:*"
        ]
      }
    ]
  },
  {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "VisualEditor0",
        "Effect": "Allow",
        "Action": [
          "bedrock:InvokeInlineAgent",
          "bedrock:InvokeAgent",
          "bedrock:InvokeModel",
          "bedrock:GetAgentAlias"
        ],
        "Resource": "*"
      }
    ]
  }
]