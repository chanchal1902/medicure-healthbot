[
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "AmazonBedrockAgentsMultiAgentsPoliciesProd",
                "Effect": "Allow",
                "Action": [
                    "bedrock:GetAgentAlias",
                    "bedrock:InvokeAgent"
                ],
                "Resource": [
                    "arn:aws:bedrock:us-east-1:254305339601:agent-alias/IGX3YDTOZE/4XS4COOCJ6",
                    "arn:aws:bedrock:us-east-1:254305339601:agent-alias/ILZUNOVXT8/BVWUWW1J2L",
                    "arn:aws:bedrock:us-east-1:254305339601:agent-alias/ILZUNOVXT8/M9VX1SVUTP",
                    "arn:aws:bedrock:us-east-1:254305339601:agent-alias/IGX3YDTOZE/AMPKRGPQGG"
                ]
            }
        ]
    },
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "BedrockAll",
                "Effect": "Allow",
                "Action": [
                    "bedrock:*"
                ],
                "Resource": "*"
            },
            {
                "Sid": "DescribeKey",
                "Effect": "Allow",
                "Action": [
                    "kms:DescribeKey"
                ],
                "Resource": "arn:*:kms:*:::*"
            },
            {
                "Sid": "APIsWithAllResourceAccess",
                "Effect": "Allow",
                "Action": [
                    "iam:ListRoles",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeSecurityGroups"
                ],
                "Resource": "*"
            },
            {
                "Sid": "MarketplaceModelEndpointMutatingAPIs",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:CreateEndpoint",
                    "sagemaker:CreateEndpointConfig",
                    "sagemaker:CreateModel",
                    "sagemaker:DeleteEndpoint",
                    "sagemaker:UpdateEndpoint"
                ],
                "Resource": [
                    "arn:aws:sagemaker:*:*:endpoint/*",
                    "arn:aws:sagemaker:*:*:endpoint-config/*",
                    "arn:aws:sagemaker:*:*:model/*"
                ],
                "Condition": {
                    "StringEquals": {
                        "aws:CalledViaLast": "bedrock.amazonaws.com",
                        "aws:ResourceTag/sagemaker-sdk:bedrock": "compatible"
                    }
                }
            },
            {
                "Sid": "MarketplaceModelEndpointAddTagsOperations",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:AddTags"
                ],
                "Resource": [
                    "arn:aws:sagemaker:*:*:endpoint/*",
                    "arn:aws:sagemaker:*:*:endpoint-config/*",
                    "arn:aws:sagemaker:*:*:model/*"
                ],
                "Condition": {
                    "ForAllValues:StringEquals": {
                        "aws:TagKeys": [
                            "sagemaker-sdk:bedrock",
                            "bedrock:marketplace-registration-status",
                            "sagemaker-studio:hub-content-arn"
                        ]
                    },
                    "StringLike": {
                        "aws:RequestTag/sagemaker-sdk:bedrock": "compatible",
                        "aws:RequestTag/bedrock:marketplace-registration-status": "registered",
                        "aws:RequestTag/sagemaker-studio:hub-content-arn": "arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/*"
                    }
                }
            },
            {
                "Sid": "MarketplaceModelEndpointDeleteTagsOperations",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:DeleteTags"
                ],
                "Resource": [
                    "arn:aws:sagemaker:*:*:endpoint/*",
                    "arn:aws:sagemaker:*:*:endpoint-config/*",
                    "arn:aws:sagemaker:*:*:model/*"
                ],
                "Condition": {
                    "ForAllValues:StringEquals": {
                        "aws:TagKeys": [
                            "sagemaker-sdk:bedrock",
                            "bedrock:marketplace-registration-status",
                            "sagemaker-studio:hub-content-arn"
                        ]
                    },
                    "StringLike": {
                        "aws:ResourceTag/sagemaker-sdk:bedrock": "compatible",
                        "aws:ResourceTag/bedrock:marketplace-registration-status": "registered",
                        "aws:ResourceTag/sagemaker-studio:hub-content-arn": "arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/*"
                    }
                }
            },
            {
                "Sid": "MarketplaceModelEndpointNonMutatingAPIs",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:DescribeEndpoint",
                    "sagemaker:DescribeEndpointConfig",
                    "sagemaker:DescribeModel",
                    "sagemaker:DescribeInferenceComponent",
                    "sagemaker:ListEndpoints",
                    "sagemaker:ListTags"
                ],
                "Resource": [
                    "arn:aws:sagemaker:*:*:endpoint/*",
                    "arn:aws:sagemaker:*:*:endpoint-config/*",
                    "arn:aws:sagemaker:*:*:model/*"
                ],
                "Condition": {
                    "StringEquals": {
                        "aws:CalledViaLast": "bedrock.amazonaws.com"
                    }
                }
            },
            {
                "Sid": "MarketplaceModelEndpointInvokingOperations",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:InvokeEndpoint",
                    "sagemaker:InvokeEndpointWithResponseStream"
                ],
                "Resource": [
                    "arn:aws:sagemaker:*:*:endpoint/*"
                ],
                "Condition": {
                    "StringEquals": {
                        "aws:CalledViaLast": "bedrock.amazonaws.com",
                        "aws:ResourceTag/sagemaker-sdk:bedrock": "compatible"
                    }
                }
            },
            {
                "Sid": "DiscoveringMarketplaceModel",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:DescribeHubContent"
                ],
                "Resource": [
                    "arn:aws:sagemaker:*:aws:hub-content/SageMakerPublicHub/Model/*",
                    "arn:aws:sagemaker:*:aws:hub/SageMakerPublicHub"
                ]
            },
            {
                "Sid": "AllowMarketplaceModelsListing",
                "Effect": "Allow",
                "Action": [
                    "sagemaker:ListHubContents"
                ],
                "Resource": "arn:aws:sagemaker:*:aws:hub/SageMakerPublicHub"
            },
            {
                "Sid": "PassRoleToSageMaker",
                "Effect": "Allow",
                "Action": [
                    "iam:PassRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/*SageMaker*ForBedrock*"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:PassedToService": [
                            "sagemaker.amazonaws.com",
                            "bedrock.amazonaws.com"
                        ]
                    }
                }
            },
            {
                "Sid": "PassRoleToBedrock",
                "Effect": "Allow",
                "Action": [
                    "iam:PassRole"
                ],
                "Resource": "arn:aws:iam::*:role/*AmazonBedrock*",
                "Condition": {
                    "StringEquals": {
                        "iam:PassedToService": [
                            "bedrock.amazonaws.com"
                        ]
                    }
                }
            },
            {
                "Sid": "MarketplaceOperationsFromBedrockFor3pModels",
                "Effect": "Allow",
                "Action": [
                    "aws-marketplace:Subscribe",
                    "aws-marketplace:ViewSubscriptions",
                    "aws-marketplace:Unsubscribe"
                ],
                "Resource": "*",
                "Condition": {
                    "StringEquals": {
                        "aws:CalledViaLast": "bedrock.amazonaws.com"
                    }
                }
            }
        ]
    },
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "AmazonLexFullAccessStatement1",
                "Effect": "Allow",
                "Action": [
                    "cloudwatch:GetMetricStatistics",
                    "cloudwatch:DescribeAlarms",
                    "cloudwatch:DescribeAlarmsForMetric",
                    "kms:DescribeKey",
                    "kms:ListAliases",
                    "lambda:GetPolicy",
                    "lambda:ListFunctions",
                    "lex:*",
                    "polly:DescribeVoices",
                    "polly:SynthesizeSpeech",
                    "kendra:ListIndices",
                    "iam:ListRoles",
                    "s3:ListAllMyBuckets",
                    "logs:DescribeLogGroups",
                    "s3:GetBucketLocation"
                ],
                "Resource": [
                    "*"
                ]
            },
            {
                "Sid": "AmazonLexFullAccessStatement2",
                "Effect": "Allow",
                "Action": [
                    "lambda:AddPermission",
                    "lambda:RemovePermission"
                ],
                "Resource": "arn:aws:lambda:*:*:function:AmazonLex*",
                "Condition": {
                    "StringEquals": {
                        "lambda:Principal": "lex.amazonaws.com"
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement3",
                "Effect": "Allow",
                "Action": [
                    "iam:GetRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots",
                    "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels",
                    "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*",
                    "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*",
                    "arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*"
                ]
            },
            {
                "Sid": "AmazonLexFullAccessStatement4",
                "Effect": "Allow",
                "Action": [
                    "iam:CreateServiceLinkedRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:AWSServiceName": "lex.amazonaws.com"
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement5",
                "Effect": "Allow",
                "Action": [
                    "iam:CreateServiceLinkedRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:AWSServiceName": "channels.lex.amazonaws.com"
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement6",
                "Effect": "Allow",
                "Action": [
                    "iam:CreateServiceLinkedRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:AWSServiceName": "lexv2.amazonaws.com"
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement7",
                "Effect": "Allow",
                "Action": [
                    "iam:CreateServiceLinkedRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:AWSServiceName": "channels.lexv2.amazonaws.com"
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement8",
                "Effect": "Allow",
                "Action": [
                    "iam:CreateServiceLinkedRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:AWSServiceName": "replication.lexv2.amazonaws.com"
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement9",
                "Effect": "Allow",
                "Action": [
                    "iam:DeleteServiceLinkedRole",
                    "iam:GetServiceLinkedRoleDeletionStatus"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots",
                    "arn:aws:iam::*:role/aws-service-role/channels.lex.amazonaws.com/AWSServiceRoleForLexChannels",
                    "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*",
                    "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*",
                    "arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*"
                ]
            },
            {
                "Sid": "AmazonLexFullAccessStatement10",
                "Effect": "Allow",
                "Action": [
                    "iam:PassRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/lex.amazonaws.com/AWSServiceRoleForLexBots"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:PassedToService": [
                            "lex.amazonaws.com"
                        ]
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement11",
                "Effect": "Allow",
                "Action": [
                    "iam:PassRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/lexv2.amazonaws.com/AWSServiceRoleForLexV2Bots*"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:PassedToService": [
                            "lexv2.amazonaws.com"
                        ]
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement12",
                "Effect": "Allow",
                "Action": [
                    "iam:PassRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/channels.lexv2.amazonaws.com/AWSServiceRoleForLexV2Channels*"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:PassedToService": [
                            "channels.lexv2.amazonaws.com"
                        ]
                    }
                }
            },
            {
                "Sid": "AmazonLexFullAccessStatement13",
                "Effect": "Allow",
                "Action": [
                    "iam:PassRole"
                ],
                "Resource": [
                    "arn:aws:iam::*:role/aws-service-role/replication.lexv2.amazonaws.com/AWSServiceRoleForLexV2Replication*"
                ],
                "Condition": {
                    "StringEquals": {
                        "iam:PassedToService": [
                            "lexv2.amazonaws.com"
                        ]
                    }
                }
            }
        ]
    },
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                    "s3:*",
                    "s3-object-lambda:*"
                ],
                "Resource": "*"
            }
        ]
    },
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                    "cloudformation:DescribeStacks",
                    "cloudformation:ListStackResources",
                    "cloudwatch:ListMetrics",
                    "cloudwatch:GetMetricData",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeVpcs",
                    "kms:ListAliases",
                    "iam:GetPolicy",
                    "iam:GetPolicyVersion",
                    "iam:GetRole",
                    "iam:GetRolePolicy",
                    "iam:ListAttachedRolePolicies",
                    "iam:ListRolePolicies",
                    "iam:ListRoles",
                    "lambda:*",
                    "logs:DescribeLogGroups",
                    "states:DescribeStateMachine",
                    "states:ListStateMachines",
                    "tag:GetResources",
                    "xray:GetTraceSummaries",
                    "xray:BatchGetTraces"
                ],
                "Resource": "*"
            },
            {
                "Effect": "Allow",
                "Action": "iam:PassRole",
                "Resource": "*",
                "Condition": {
                    "StringEquals": {
                        "iam:PassedToService": "lambda.amazonaws.com"
                    }
                }
            },
            {
                "Effect": "Allow",
                "Action": [
                    "logs:DescribeLogStreams",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                    "logs:StartLiveTail",
                    "logs:StopLiveTail"
                ],
                "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
            }
        ]
    },
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Effect": "Allow",
                "Action": [
                    "cloudwatch:PutMetricData",
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                ],
                "Resource": "*"
            }
        ]
    },
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "VisualEditor0",
                "Effect": "Allow",
                "Action": [
                    "bedrock:InvokeInlineAgent",
                    "bedrock:InvokeAgent",
                    "bedrock:InvokeModel",
                    "bedrock:GetAgentAlias"
                ],
                "Resource": "*"
            }
        ]
    },
    {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Sid": "marketplace",
                "Effect": "Allow",
                "Action": [
                    "aws-marketplace:ViewSubscriptions"
                ],
                "Resource": "*"
            }
        ]
    }
]